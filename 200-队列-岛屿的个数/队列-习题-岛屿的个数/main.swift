//
//  main.swift
//  队列-习题-岛屿的个数
//
//  Created by apple on 2019/3/7.
//  Copyright © 2019 gaoyu. All rights reserved.
//

import Foundation

/**
 岛屿的个数:
 给定一个由 '1'（陆地）和 '0'（水）组成的的二维网格，计算岛屿的数量。一个岛被水包围，并且它是通过水平方向或垂直方向上相邻的陆地连接而成的。你可以假设网格的四个边均被水包围。
 示例 1:
 输入:
 11110
 11010
 11000
 00000
 
 输出: 1

 示例 2:
 输入:
 11000
 11000
 00100
 00011
 
 输出: 3
 */

/**
 广度优先遍历: BFS
 先决条件：树的层序遍历
 广度优先搜索（BFS）是一种遍历或搜索数据结构（如树或图）的算法。
 如前所述，我们可以使用 BFS 在树中执行层序遍历。
 我们也可以使用 BFS 遍历图。例如，我们可以使用 BFS 找到从起始结点到目标结点的路径，特别是最短路径。
 我们可以在更抽象的情景中使用 BFS 遍历所有可能的状态。在这种情况下，我们可以把状态看作是图中的结点，而以合法的过渡路径作为图中的边。
 */


class Solution {
    func numIslands(_ grid: [[Character]]) -> Int {
        
    }
}




